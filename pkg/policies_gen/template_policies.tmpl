// Code generated by Baymaxx. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package {{.Package}}


import (
	"fmt"
	"reflect"
)


{{range $key, $val := .Groups}}
var {{$key.Public}} = {{$key.Private}}{
	{{range  $val }}{{.Public}}: "{{.Private}}",
	{{end}}
}
{{end}}

var (
	{{range $key, $val := .Resources}}
		{{- $key.Public -}}Resource resource = "{{- $key.Private -}}"
		{{- printf "\n" -}}
		{{- $key.Public -}}Actions = {{- $key.Private -}}Actions  {
			{{- printf "\n" -}}
			{{- range $val -}}
			{{- if ("" | eq .Type) -}}
				{{- .Private -}} {{- printf ":" -}} {{- .Public -}},
			{{- else -}}
				{{- .Public -}} {{- printf ":" -}} "{{- .Private -}}",
			{{- end -}}
			{{- printf "\n" -}}
			{{- end -}}
		}
		{{- printf "\n" -}}
	{{end}}
)



{{range $key, $val := .Groups}}
	type {{ $key.Private }} struct {
		{{- range $val -}}
		{{- .Public -}} {{- printf " string" -}}
		{{- printf "\n" -}}
		{{- end -}}
	}
{{end}}


{{range $key, $val := .Resources}}
	type {{ $key.Private -}}Actions struct {
		{{- range $val -}}
		{{- if ("" | eq .Type) -}}
			{{- .Private -}}
		{{- else -}}
			{{- .Public -}} {{- printf " string" -}}
		{{- end -}}
		{{- printf "\n" -}}
		{{- end -}}
	}
{{end}}

{{range $key, $val := .Resources}}
func (p {{ $key.Private -}}Actions ) All() []string {
	return getFieldsValueStruct(p)
}
{{ end }}

type resource string

func (r resource) ID(id string) resource {
	return resource(fmt.Sprintf("%s:%s", r, id))
}

func (r resource) Any() resource {
	return resource(fmt.Sprintf("%s:<.+>", r))
}

func (r resource) String() string {
	return string(r)
}

func (r resource) Action(action string) string {
	return fmt.Sprintf("%s:%s", r.String(), action)
}


func getFieldsValueStruct(T any) []string {
	v := reflect.ValueOf(T)
	values := make([]string, 0)

	for i := 0; i < v.Type().NumField(); i++ {
		field := v.Type().Field(i)
		if !field.IsExported() {
			continue
		}

		values = append(values, v.FieldByName(field.Name).String())
	}
	return values
}